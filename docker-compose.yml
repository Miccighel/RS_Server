# ---------- SCENARIO 1: DEPLOY WITH REMOTE IMAGES ----------

version: '3'
services:
  rs_server_webapp:
    image: miccighel/rs_server:v1.0.12-alpha
    command: rails server -p 3000 -b '0.0.0.0' -e development
    env_file: .env
    ports:
      - "3000:3000"
    links:
      - rs_server_database
    container_name: webapp
  rs_server_database:
    image: postgres:11.2
    env_file: .env
    ports:
      - "5432:5432"
    container_name: postgres

# ---------- END OF SCENARIO 1: DEPLOY WITH REMOTE IMAGES ----------

# ---------- SCENARIO 2: DEPLOY WITH LOCAL BUILD ----------

#version: '3'
#services:
#  rs_server_webapp:
#    build: .
#    image: miccighel/rs_server:v1.0.12-alpha
#    env_file: .env
#    command: rails server -p 3000 -b '0.0.0.0' -e production
#    volumes:
#    - .:/app
#    ports:
#    - "3000:3000"
#    links:
#    - rs_server_database
#    container_name: webapp
#  rs_server_database:
#    image: postgres:11.2
#    ports:
#    - "5432:5432"
#    container_name: postgres

# ---------- END OF SCENARIO 2: DEPLOY WITH LOCAL BUILD ----------

# ---------- ADDITIONAL USEFUL COMMANDS ----------

# docker-compose run rs_server_webapp rake db:create
# docker-compose run rs_server_webapp rake db:migrate
# docker-compose run rs_server_webapp rake db:seed (Eventually)
# docker-compose run rails server -p 3000 -b '0.0.0.0' (Dev Mode)
# docker-compose run rails server -p 3000 -b '0.0.0.0' -e production (Prod Mode)

# ---------- END ----------